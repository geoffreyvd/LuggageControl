/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screen.delete;

import baseClasses.ErrorJDialog;
import baseClasses.SwitchingJPanel;
import constants.ScreenNames;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import main.LuggageControl;
import managers.DatabaseMan;
import managers.SecurityMan;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author Gebruiker
 */
public class DeleteCustomer extends SwitchingJPanel {

    private DatabaseMan db = new DatabaseMan();

    public DeleteCustomer(LuggageControl luggageControl) {
        super(luggageControl);
        initComponents();
        PromptSupport.setPrompt("Customer Name", textFieldCustomerName);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, textFieldCustomerName);
        PromptSupport.setPrompt("Customer Surname", textFieldCustomerSurname);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, textFieldCustomerSurname);
        PromptSupport.setPrompt("Customer Email", textFieldCustomerEmail);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, textFieldCustomerEmail);
        PromptSupport.setPrompt("Customer ID", textFieldCustomerId);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, textFieldCustomerId);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelHeader = new javax.swing.JLabel();
        textFieldCustomerId = new javax.swing.JFormattedTextField();
        textFieldCustomerName = new javax.swing.JFormattedTextField();
        textFieldCustomerSurname = new javax.swing.JFormattedTextField();
        textFieldCustomerEmail = new javax.swing.JFormattedTextField();
        buttonSearch = new javax.swing.JButton();
        scrollPaneDeleteCustomer = new javax.swing.JScrollPane();
        tableDeleteCustomer = new javax.swing.JTable();
        buttonBack = new javax.swing.JButton();
        buttonHelp = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();

        setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        labelHeader.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        labelHeader.setText("Delete Customer");

        textFieldCustomerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldCustomerIdActionPerformed(evt);
            }
        });

        textFieldCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldCustomerNameActionPerformed(evt);
            }
        });

        textFieldCustomerSurname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldCustomerSurnameActionPerformed(evt);
            }
        });

        textFieldCustomerEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldCustomerEmailActionPerformed(evt);
            }
        });

        buttonSearch.setText("Search");
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });

        tableDeleteCustomer.setAutoCreateRowSorter(true);
        tableDeleteCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Customer first name", "Customer surname", "Customer email", "remove"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPaneDeleteCustomer.setViewportView(tableDeleteCustomer);

        buttonBack.setText("Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        buttonHelp.setText("Help");
        buttonHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHelpActionPerformed(evt);
            }
        });

        buttonUpdate.setText("Update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scrollPaneDeleteCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textFieldCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textFieldCustomerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 318, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(buttonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 318, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(textFieldCustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(textFieldCustomerSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 318, Short.MAX_VALUE))))))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelHeader)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldCustomerSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldCustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldCustomerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonHelp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBack)))
                .addGap(22, 22, 22)
                .addComponent(scrollPaneDeleteCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonUpdate)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldCustomerNameActionPerformed
        this.userNotAFK();

    }//GEN-LAST:event_textFieldCustomerNameActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        this.userNotAFK();
        this.luggageControl.switchJPanel(ScreenNames.HOME_SCREEN_ADMINISTRATOR);
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHelpActionPerformed
        this.userNotAFK();
        this.luggageControl.switchJPanel(ScreenNames.Help.REMOVING);
    }//GEN-LAST:event_buttonHelpActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        this.userNotAFK();
        buildTable();
    }//GEN-LAST:event_buttonSearchActionPerformed

    private void textFieldCustomerSurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldCustomerSurnameActionPerformed
        this.userNotAFK();
    }//GEN-LAST:event_textFieldCustomerSurnameActionPerformed

    private void textFieldCustomerEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldCustomerEmailActionPerformed
        this.userNotAFK();
    }//GEN-LAST:event_textFieldCustomerEmailActionPerformed

    private void textFieldCustomerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldCustomerIdActionPerformed
        this.userNotAFK();
    }//GEN-LAST:event_textFieldCustomerIdActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        buildTable();
    }//GEN-LAST:event_formAncestorAdded

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        DefaultTableModel datamodel = (DefaultTableModel) tableDeleteCustomer.getModel();
        String query = "DELETE FROM customer WHERE 1=0";
        String query1 = "DELETE FROM customer_flight WHERE 1=0";
        String query2 = "DELETE FROM customer_luggage WHERE 1=0";
        ArrayList<String> data = new ArrayList();
        ArrayList<String> types = new ArrayList();
        boolean[] idRemove = new boolean[datamodel.getRowCount()];

        for (int i = datamodel.getRowCount() - 1; i >= 0; i--) {

            // if this entry equals true - true to remove
            if ((boolean) datamodel.getValueAt(i, (datamodel.getColumnCount() - 1))) {
                query += " OR customer_id = ?";
                query1 += " OR customer_id = ?";
                query2 += " OR customer_id = ?";
                data.add((String) datamodel.getValueAt(i, 0));
                types.add(db.PS_TYPE_INT);
            }
        }

        String[] values = data.toArray(new String[data.size()]);
        String[] types2 = types.toArray(new String[types.size()]);

        try {
            db.queryManipulation(query2, values, types2);
            db.queryManipulation(query1, values, types2);
            db.queryManipulation(query, values, types2);
            buildTable();
        } catch (Exception e) {
            new ErrorJDialog(this.luggageControl, true, "Critical error: my god what have you done!", e.getStackTrace(), true);
        }

        for (boolean idrem : idRemove) {
            System.out.println(idrem);
        }
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buildTable() {
        ArrayList<String> values = new ArrayList<String>();
        String query = "SELECT * FROM luggagecontroldata.customer";
        if (!textFieldCustomerId.getText().equals("") || !textFieldCustomerName.getText().equals("")
                || !textFieldCustomerEmail.getText().equals("") || !textFieldCustomerSurname.getText().equals("")) {
            query += " WHERE 1 = 0";
        } else {
            query += " order by customer_id desc";
        }
        if (!textFieldCustomerId.getText().equals("")) {
            query += " OR customer_id = ?";
            values.add(helpers.Filters.filteredString(textFieldCustomerId.getText()));
        }
        if (!textFieldCustomerName.getText().equals("")) {
            query += " OR firstname = ?";
            values.add(helpers.Filters.filteredString(textFieldCustomerName.getText()));
        }
        if (!textFieldCustomerEmail.getText().equals("")) {
            query += " OR email = ?";
            values.add(helpers.Filters.filteredString(textFieldCustomerEmail.getText()));
        }
        if (!textFieldCustomerSurname.getText().equals("")) {
            query += " OR surname = ?";
            values.add(helpers.Filters.filteredString(textFieldCustomerSurname.getText()));
        }

        ResultSet result;
        try {
            result = db.query(query, values.toArray(new String[values.size()]));
            DefaultTableModel datamodel = (DefaultTableModel) tableDeleteCustomer.getModel();
            for (int i = datamodel.getRowCount() - 1; i > -1; i--) {
                datamodel.removeRow(i);
            }
            while (result.next()) {

                Object[] data = {
                    result.getString("customer_id"),
                    result.getString("firstname"),
                    result.getString("surname"),
                    result.getString("email"),
                    false
                };

                // datamodel.addRow is skipped problaby exception
                datamodel.addRow(data);
            }
            tableDeleteCustomer.setModel(datamodel);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonHelp;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel labelHeader;
    private javax.swing.JScrollPane scrollPaneDeleteCustomer;
    private javax.swing.JTable tableDeleteCustomer;
    private javax.swing.JFormattedTextField textFieldCustomerEmail;
    private javax.swing.JFormattedTextField textFieldCustomerId;
    private javax.swing.JFormattedTextField textFieldCustomerName;
    private javax.swing.JFormattedTextField textFieldCustomerSurname;
    // End of variables declaration//GEN-END:variables

}
